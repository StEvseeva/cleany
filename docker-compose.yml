version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15.5-alpine
    container_name: cleany-postgres
    environment:
      POSTGRES_DB: cleany
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - cleany-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d cleany"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Go Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cleany-app
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=cleany
      - DB_SSLMODE=disable
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - cleany-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/rooms"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local

networks:
  cleany-network:
    driver: bridge 